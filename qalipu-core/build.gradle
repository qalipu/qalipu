/*
 * Copyright 2018 the original author or authors.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
        kotlinVersion = '1.2.10'
        springBootVersion = '1.5.9.RELEASE'
        javaVersion = 1.8
        appVersion = "0.1.0-SNAPSHOT"
        keycloakVersion = "3.4.3.Final"
        vaadinVersion = "8.2.0"
        vaadinSpringBootVersion = "2.0.1"
        vaadinSpringBootExtVersion = "2.0.0.RELEASE"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

group = 'ca.bigbluebox.qalipu'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://dl.bintray.com/mvysny/vaadin-on-kotlin" }
}


dependencies {
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"

    compile("com.vaadin:vaadin-spring-boot-starter:$vaadinSpringBootVersion")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("com.github.vok.karibudsl:karibu-dsl-v8:0.2.16")
    runtime("org.springframework.boot:spring-boot-devtools:$springBootVersion")
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")


    compile "org.keycloak:keycloak-spring-security-adapter:${keycloakVersion}"
    compile "org.keycloak:keycloak-spring-boot-adapter:${keycloakVersion}"
    compile "org.keycloak:keycloak-tomcat8-adapter:${keycloakVersion}"

    compile "com.vaadin:vaadin-server:${vaadinVersion}"
    compile "com.vaadin:vaadin-client-compiled:${vaadinVersion}"
    compile "com.vaadin:vaadin-themes:${vaadinVersion}"
    compile "com.vaadin:vaadin-push:${vaadinVersion}"

    compile "com.vaadin:vaadin-spring-boot:${vaadinSpringBootVersion}"

    compile "org.vaadin.spring.extensions:vaadin-spring-ext-boot:${vaadinSpringBootExtVersion}"
    compile "org.vaadin.spring.extensions:vaadin-spring-ext-core:${vaadinSpringBootExtVersion}"
    compile "org.vaadin.spring.extensions:vaadin-spring-ext-security:${vaadinSpringBootExtVersion}"
    compile "org.vaadin.spring.extensions:vaadin-spring-ext-test:${vaadinSpringBootExtVersion}"

    compile "org.vaadin.spring.addons:vaadin-spring-addon-eventbus:${vaadinSpringBootExtVersion}"
    compile "org.vaadin.spring.addons:vaadin-spring-addon-sidebar:${vaadinSpringBootExtVersion}"
    compile "org.vaadin.spring.addons:vaadin-spring-addon-i18n:${vaadinSpringBootExtVersion}"
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        repo = 'qalipu'
        name = 'qalipu-core-spring-boot-starter'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/qalipu/qalipu'
        version {
            name = version
        }
    }
}